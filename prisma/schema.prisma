// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
  id String @id @unique
  email String @unique
  firstname String
  lastname String
  profileImage String?
  home Home[]
favorite Favorite[]
reservation Reservation[]
}

model Home {
  id String  @id @default(uuid())
  title String?
  description String?
  guests String?
  bedrooms String?
  country String?
  bathrooms String?
  photo String?
  price Int?
  categoryName String?
  addCategory Boolean @default(false)
  addDescription Boolean @default(false)
  addLocation Boolean @default(false)
  createdAt DateTime @default(now())
  user User? @relation(fields: [userId],references:[id],onDelete: Cascade)
  userId String?
  favorite Favorite[]
  reservation Reservation[]
}
model Favorite{
    id String  @id @default(uuid())
    userId String
    homeId String
    user User @relation(fields: [userId],references: [id],onDelete: Cascade)
    Home Home @relation(fields: [homeId],references: [id],onDelete: Cascade)
    createdAt DateTime @default(now())
    @@index([homeId,userId])
}



model Reservation{
    id String  @id @default(uuid())
    userId String
    homeId String
    user User @relation(fields: [userId],references: [id],onDelete: Cascade)
    Home Home @relation(fields: [homeId],references: [id],onDelete: Cascade)
    startDate DateTime
    endDate DateTime
    createdAt DateTime @default(now())
    @@index([homeId,userId])
}